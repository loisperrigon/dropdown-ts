import React, { useState } from "react";
import "./Dropdown.css"; // Assure-toi d'avoir un fichier Dropdown.css pour styliser ton dropdown si nécessaire

interface Option {
  value: string;
  label: string;
}

interface DropdownProps {
  options: { [key: string]: Option }; // Définit un objet où chaque clé est une valeur de type string et chaque valeur est de type Option
  onSelect: (option: Option) => void;
}

const Dropdown: React.FC<DropdownProps> = ({ options, onSelect }) => {
  const [selectedOption, setSelectedOption] = useState<Option | null>(null);
  const [isOpen, setIsOpen] = useState(false);

  const toggleDropdown = () => {
    setIsOpen(!isOpen);
  };

  const handleSelectOption = (optionKey: string) => {
    const selected = options[optionKey];
    setSelectedOption(selected);
    onSelect(selected); // Appelle la fonction onSelect passée en props avec l'option sélectionnée
    setIsOpen(false); // Ferme le dropdown après sélection
  };

  return (
    <div className="dropdown-container">
      <div className="dropdown-header" onClick={toggleDropdown}>
        {selectedOption ? selectedOption.label : "Select an option"}
        <i className={`dropdown-icon ${isOpen ? "open" : ""}`}></i>
      </div>
      {isOpen && (
        <ul className="dropdown-list">
          {Object.keys(options).map((optionKey) => (
            <li
              key={optionKey}
              className="dropdown-item"
              onClick={() => handleSelectOption(optionKey)}
            >
              {options[optionKey].label}
            </li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default Dropdown;
